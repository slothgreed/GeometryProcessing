
#version 430
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D outImage;

layout(std430, binding = 2) buffer posBuffer
{
	vec4 position[];
};

layout(std430, binding = 3) buffer colBuffer
{
	vec4 color[];
};
layout(location = 4) uniform mat4 u_VP;

void main()
{
	uint workGroupSize = 
		gl_WorkGroupSize.x * gl_WorkGroupSize.y;
	uint globalID = 
		gl_WorkGroupID.x * workGroupSize + 
		gl_WorkGroupID.y * gl_NumWorkGroups.x * workGroupSize + 
		gl_LocalInvocationIndex;


	vec4 pos = u_VP * position[globalID];
	pos.xyz = pos.xyz / pos.w;

	
	if(	pos.w <= 0.0 || 
		pos.x < -1.0 || 
		pos.x > 1.0 || 
		pos.y < -1.0 || 
		pos.y > 1.0){
		return;
	}
	imageStore(
	outImage, 
	ivec2((pos.xy * 0.5 + 0.5) * imageSize(outImage)),
	position[globalID]);
} 
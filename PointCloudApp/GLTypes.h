#ifndef GL_TYPES_H
#define GL_TYPES_H
#include <gl/glew.h>
namespace KI
{
enum DATA_TYPE
{
	DATA_UNKNOWN = GL_NONE,
	DATA_INT = GL_INT,
	DATA_FLOAT = GL_FLOAT,
	DATA_UBYTE = GL_UNSIGNED_BYTE,
	DATA_USHORT = GL_UNSIGNED_SHORT,
	DATA_UINT = GL_UNSIGNED_INT,
};

enum PRIMITIVE_TYPE
{
	PRIMITIVE_POINTS = GL_POINTS,
	PRIMITIVE_LINES = GL_LINES,
	PRIMITIVE_LINE_LOOP = GL_LINE_LOOP,
	PRIMITIVE_LINE_STRIP = GL_LINE_STRIP,
	PRIMITIVE_TRIANGLE = GL_TRIANGLES,
	PRIMITIVE_TRIANGLE_STRIP = GL_TRIANGLE_STRIP,
	PRIMITIVE_TRIANGLE_FAN = GL_TRIANGLE_FAN

};

enum TEXTURE_TYPE
{
	TEXTURE_BUFFER = 1,
	TEXTURE_2D = GL_TEXTURE_2D,
	TEXTURE_3D = GL_TEXTURE_3D,
	TEXTURE_CUBE_MAP = GL_TEXTURE_CUBE_MAP
};

struct DrawArgs
{
	DrawArgs()
		: primitive(PRIMITIVE_POINTS), dataType(DATA_UINT), offset(0), count(0), baseVertex(0)
	{
	}
	PRIMITIVE_TYPE primitive;
	uint count;
	DATA_TYPE dataType;
	uint offset;
	uint baseVertex;
};


}

#endif GL_TYPES_H